<programme> -> [<constant_declaration>][<variable_declaration>]<func_definition>

<constant_declaration> -> const <const_definition>;{const <const_definition>;}

<const_definition> -> int <identifier>=<int>{,<identifier>=<int_val>}
                    | char <identifier>=<char>{,<identifier>=<char_val>}

<variable_declaration> -> <variable_definition>;{<variable_definition>;}

<variable_definition> -> int <identifier>|<identifier>=<int_val>{,<identifier>|<identifier>=<int_val>}
                        |char <identifier>|<identifier>=<char_val>{,<identifier>|<identifier>=<char_val>}

<func_definition> -> <func_with_return_value>|<func_without_return_value>|<main_func>

<main_func> -> int main ( ) <statement_block>

<statement_block> -> '{'
                   { <var_declaration>
                   | <ret_statement>
                   | <statement_block>
                   | <constant_declaration>
                   | <if-else_statement>
                   | <for_loop_statement>
                   | <while_loop_statement>
                   | <do-while_loop_statement>
                   | <switch-case_statement>
                   | <func_call_statement>
                   | <assignment_statement>
                   | <statement_block> }
                   '}'

<if-else_statement> -> if (<expression>) <statement_block>
                     | if (<expression>) <statement_block> else <statement_block>

<for_loop_statement> for (<expression1>;<express2>;<express3>) <statement_block>

<while_loop_statement> while (<expression>)<statement_block>

<do-while_loop_statement> do <statement_block> while (<expression>)

<switch-case_statement> switch <emmm>

<func_call_statement>

<assignment_statement>